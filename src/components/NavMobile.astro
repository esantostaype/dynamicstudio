---
import type { Nav } from '@/interfaces'
import ClientsZoneButton from '@/components/ui/ClientsZoneButton.astro'

interface Props {
  nav: Nav[]
}
const { nav } = Astro.props
---

<button class="open-nav size-10 -mr-2 items-center justify-center flex xl:hidden">
  <div class="cursor-pointer relative size-[21px]">
    <span class="dot"></span>
    <span class="dot"></span>
    <span class="dot"></span>
    <span class="dot"></span>
    <span class="dot"></span>
    <span class="dot"></span>
    <span class="dot"></span>
    <span class="dot"></span>
    <span class="dot"></span>
  </div>
</button>
<section class='nav-mobile fixed h-dvh w-full top-0 left-0'>
  <div class="close-nav fixed h-dvh w-full inset-0 bg-[rgba(10,10,32,0.8)]  z-[9999]" />
  <div class="nav-mobile__content">
    <nav class="flex flex-col pt-7 gap-2">
      { nav.map(({ label, path, active }) => (
        <a class={`hover:text-dyn-green-400 py-1 px-8 relative transition-all duration-300 ${ active ? "text-dyn-green-400" : "" }`} href={ path }>
          { label }
        </a>
        ))
      }
    </nav>
    <div class="p-4">
      <ClientsZoneButton/>
    </div>
  </div>
</section>

<script>
  document.addEventListener("astro:page-load", () => {
    const openNavButton = document.querySelector(".open-nav") as HTMLElement
    const closeNavButton = document.querySelector(".close-nav") as HTMLElement
    const navMobile = document.querySelector(".nav-mobile") as HTMLElement

    openNavButton.addEventListener('click',()=>{
      navMobile.classList.add("active")
    })

    closeNavButton.addEventListener('click',()=>{
      navMobile.classList.remove("active")
    })
  })
</script>

<style>
  .nav-mobile{
    opacity: 0;
    visibility: hidden;
    transition: all cubic-bezier(0.32,0.72,0,1) 0.5s;
  }
  .nav-mobile.active{
    opacity: 1;
    visibility: visible;
  }
  .nav-mobile__content{
    backdrop-filter: blur(40px);
    border-left: 1px solid rgba(255, 255, 255, 0.1);
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 0.5rem 0 0;
    display: flex;
    flex-direction: column;
    font-size: 1.25rem;
    font-weight: 600;
    height: calc(100dvh - 1rem);
    justify-content: space-between;
    letter-spacing: 0.05rem;
    opacity: 0;
    position: absolute;
    right: -18rem;
    text-transform: uppercase;
    transition: all cubic-bezier(0.32,0.72,0,1) 0.5s;
    top: 1rem;
    width: 18rem;
    z-index: 9999;
  }

  .active .nav-mobile__content{
    opacity: 1;
    right: 0;
  }
  
  .dot{
    background: white;
    border-radius:3px;
    height: 3px;
    left: 0;
    position: absolute;
    top: 0;
    width: 3px;
  }

  .dot:nth-child(even) {
    left: calc(50% - (3px / 2));
  }

  .dot:nth-child(3),
  .dot:nth-child(6),
  .dot:nth-child(9) {
    left: calc(100% - (3px));
  }

  .dot:nth-child(4),
  .dot:nth-child(5),
  .dot:nth-child(6) {
    top: calc(50% - (3px / 2));
  }

  .dot:nth-child(7),
  .dot:nth-child(8),
  .dot:nth-child(9) {
    top: calc(100% - (3px));
  }
</style>